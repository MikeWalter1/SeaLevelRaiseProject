/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Donate,
  DonateInterface,
} from "../../../contracts/Deprecated/Donate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "mail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "donatedAmount",
        type: "uint256",
      },
    ],
    name: "DonaterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "mail",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_mail",
        type: "string",
      },
    ],
    name: "changeDonatorMailAdress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonaterDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "mail",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "donatedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingTokens",
            type: "uint256",
          },
        ],
        internalType: "struct Donate.Donater",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfDonaters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "idToOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idDonator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "removeDonatorToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_mail",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "updateDonatedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userHasDonated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawMoney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611285806100206000396000f3fe60806040526004361061008a5760003560e01c80636f9fb98a116100595780636f9fb98a1461016457806382edf7621461018f5780639fb868e6146101b8578063eb3c6d98146101e3578063facb5c6a1461020c576100a5565b8063364cbfff146100aa57806348053848146100e757806354876921146101125780635d6193411461013b576100a5565b366100a55766038d7ea4c680003410156100a357600080fd5b005b600080fd5b3480156100b657600080fd5b506100d160048036038101906100cc919061098a565b610249565b6040516100de91906109d0565b60405180910390f35b3480156100f357600080fd5b506100fc610261565b6040516101099190610ada565b60405180910390f35b34801561011e57600080fd5b5061013960048036038101906101349190610b28565b61040d565b005b34801561014757600080fd5b50610162600480360381019061015d9190610c8a565b610410565b005b34801561017057600080fd5b506101796104d3565b60405161018691906109d0565b60405180910390f35b34801561019b57600080fd5b506101b660048036038101906101b19190610cd3565b6104db565b005b3480156101c457600080fd5b506101cd61051b565b6040516101da91906109d0565b60405180910390f35b3480156101ef57600080fd5b5061020a60048036038101906102059190610d13565b610551565b005b34801561021857600080fd5b50610233600480360381019061022e919061098a565b610744565b60405161024091906109d0565b60405180910390f35b60026020528060005260406000206000915090505481565b6102696108f7565b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036103cf576000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000818154811061030857610307610d6f565b5b906000526020600020906003020160405180606001604052908160008201805461033190610dcd565b80601f016020809104026020016040519081016040528092919081815260200182805461035d90610dcd565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b505050505081526020016001820154815260200160028201548152505091505061040a565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610e5b565b60405180910390fd5b90565b50565b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036104d0576000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081600082815481106104b0576104af610d6f565b5b906000526020600020906003020160000190816104cd9190611027565b50505b50565b600047905090565b80600083815481106104f0576104ef610d6f565b5b906000526020600020906003020160020160008282546105109190611128565b925050819055505050565b60008060005b6000805490508110156105495781806105399061115c565b9250508080600101915050610521565b508091505090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610604576105a18161075c565b600082905060008151146105b9576105b88361087c565b5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050610740565b6000829050600081511461061c5761061b8361087c565b5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050826000828154811061067557610674610d6f565b5b9060005260206000209060030201600101600082825461069591906111a4565b9250508190555082600082815481106106b1576106b0610d6f565b5b906000526020600020906003020160020160008282546106d191906111a4565b9250508190555060008082815481106106ed576106ec610d6f565b5b90600052602060002090600302016001015490507f552ecc61abef242a754033ffa95f474fb47ac4970c88fa73f29ff32bb9daeb8782868360405161073493929190611211565b60405180910390a15050505b5050565b60016020528060005260406000206000915090505481565b60006040518060200160405280600081525090506000604051806060016040528083815260200184815260200184815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190816107cb9190611027565b5060208201518160010155604082015181600201555050600060016000805490506107f69190611128565b905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fe818f0f07b2c301ad2eae117f3288ac7dc37c4aa0a28c46a7fd23b81356442bf81838560405161086f93929190611211565b60405180910390a1505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081600082815481106108d5576108d4610d6f565b5b906000526020600020906003020160000190816108f29190611027565b505050565b60405180606001604052806060815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109578261092c565b9050919050565b6109678161094c565b811461097257600080fd5b50565b6000813590506109848161095e565b92915050565b6000602082840312156109a05761099f610922565b5b60006109ae84828501610975565b91505092915050565b6000819050919050565b6109ca816109b7565b82525050565b60006020820190506109e560008301846109c1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a25578082015181840152602081019050610a0a565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a4d826109eb565b610a5781856109f6565b9350610a67818560208601610a07565b610a7081610a31565b840191505092915050565b610a84816109b7565b82525050565b60006060830160008301518482036000860152610aa78282610a42565b9150506020830151610abc6020860182610a7b565b506040830151610acf6040860182610a7b565b508091505092915050565b60006020820190508181036000830152610af48184610a8a565b905092915050565b610b05816109b7565b8114610b1057600080fd5b50565b600081359050610b2281610afc565b92915050565b600060208284031215610b3e57610b3d610922565b5b6000610b4c84828501610b13565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b9782610a31565b810181811067ffffffffffffffff82111715610bb657610bb5610b5f565b5b80604052505050565b6000610bc9610918565b9050610bd58282610b8e565b919050565b600067ffffffffffffffff821115610bf557610bf4610b5f565b5b610bfe82610a31565b9050602081019050919050565b82818337600083830152505050565b6000610c2d610c2884610bda565b610bbf565b905082815260208101848484011115610c4957610c48610b5a565b5b610c54848285610c0b565b509392505050565b600082601f830112610c7157610c70610b55565b5b8135610c81848260208601610c1a565b91505092915050565b600060208284031215610ca057610c9f610922565b5b600082013567ffffffffffffffff811115610cbe57610cbd610927565b5b610cca84828501610c5c565b91505092915050565b60008060408385031215610cea57610ce9610922565b5b6000610cf885828601610b13565b9250506020610d0985828601610b13565b9150509250929050565b60008060408385031215610d2a57610d29610922565b5b600083013567ffffffffffffffff811115610d4857610d47610927565b5b610d5485828601610c5c565b9250506020610d6585828601610b13565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610de557607f821691505b602082108103610df857610df7610d9e565b5b50919050565b600082825260208201905092915050565b7f5573657220686173206e6f7420646f6e61746564000000000000000000000000600082015250565b6000610e45601483610dfe565b9150610e5082610e0f565b602082019050919050565b60006020820190508181036000830152610e7481610e38565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610edd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610ea0565b610ee78683610ea0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f24610f1f610f1a846109b7565b610eff565b6109b7565b9050919050565b6000819050919050565b610f3e83610f09565b610f52610f4a82610f2b565b848454610ead565b825550505050565b600090565b610f67610f5a565b610f72818484610f35565b505050565b5b81811015610f9657610f8b600082610f5f565b600181019050610f78565b5050565b601f821115610fdb57610fac81610e7b565b610fb584610e90565b81016020851015610fc4578190505b610fd8610fd085610e90565b830182610f77565b50505b505050565b600082821c905092915050565b6000610ffe60001984600802610fe0565b1980831691505092915050565b60006110178383610fed565b9150826002028217905092915050565b611030826109eb565b67ffffffffffffffff81111561104957611048610b5f565b5b6110538254610dcd565b61105e828285610f9a565b600060209050601f831160018114611091576000841561107f578287015190505b611089858261100b565b8655506110f1565b601f19841661109f86610e7b565b60005b828110156110c7578489015182556001820191506020850194506020810190506110a2565b868310156110e457848901516110e0601f891682610fed565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611133826109b7565b915061113e836109b7565b9250828203905081811115611156576111556110f9565b5b92915050565b6000611167826109b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611199576111986110f9565b5b600182019050919050565b60006111af826109b7565b91506111ba836109b7565b92508282019050808211156111d2576111d16110f9565b5b92915050565b60006111e3826109eb565b6111ed8185610dfe565b93506111fd818560208601610a07565b61120681610a31565b840191505092915050565b600060608201905061122660008301866109c1565b818103602083015261123881856111d8565b905061124760408301846109c1565b94935050505056fea26469706673582212202a654aa997477f4532644a275f805fff4d46f75be8e3f9280985668202aef89c64736f6c63430008180033";

type DonateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Donate__factory extends ContractFactory {
  constructor(...args: DonateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Donate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Donate__factory {
    return super.connect(runner) as Donate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonateInterface {
    return new Interface(_abi) as DonateInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Donate {
    return new Contract(address, _abi, runner) as unknown as Donate;
  }
}
